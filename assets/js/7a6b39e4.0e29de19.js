"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[99],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),l=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},i=function(e){var t=l(e.components);return r.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(a,".").concat(d)]||m[d]||p[d]||s;return n?r.createElement(f,u(u({ref:t},i),{},{components:n})):r.createElement(f,u({ref:t},i))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,u=new Array(s);u[0]=m;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,u[1]=c;for(var l=2;l<s;l++)u[l]=n[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7973:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),u=["components"],c={},a="useHolmesReducer",l={unversionedId:"Hooks/use-holmes-reducer",id:"Hooks/use-holmes-reducer",title:"useHolmesReducer",description:"Examples",source:"@site/docs/Hooks/use-holmes-reducer.md",sourceDirName:"Hooks",slug:"/Hooks/use-holmes-reducer",permalink:"/react-holmes/docs/Hooks/use-holmes-reducer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Hooks/use-holmes-reducer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/react-holmes/docs/Introduction/getting-started"},next:{title:"useHolmesSelector",permalink:"/react-holmes/docs/Hooks/use-holmes-selector"}},i={},p=[{value:"Examples",id:"examples",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,u);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"useholmesreducer"},"useHolmesReducer"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.js"',title:'"App.js"'},'import "./styles.css";\nimport {useSetHolmesReducer, useHolmesState} from "@devx-os/react-holmes";\nimport MyCount from "./MyCount";\nimport MyCount2 from "./MyCount2";\nimport MyCountVisulizer from "./MyCountVisualizer";\n\nconst reducer = (state, action) => {\n  const actions = {\n    INCREMENT: () => {\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    },\n    DECREMENT: () => {\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    },\n    RESET: () => {\n      return {\n        counter: 0\n      };\n    }\n  };\n  return action ? actions[action.type]() : null;\n};\n\nexport default function App() {\n  useSetHolmesReducer(\n      "myReducer",\n      {\n        counter: 0\n      },\n      reducer\n  );\n\n  const [globalState, setGlobalState] = useHolmesState("myValue");\n  return (\n      <div className="App">\n        <MyCount/>\n        <hr/>\n        <MyCount2/>\n        <hr/>\n        <MyCountVisulizer/>\n      </div>\n  );\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="MyCount.js"',title:'"MyCount.js"'},'import "./styles.css";\nimport {useHolmesReducer} from "@devx-os/react-holmes";\n\nexport default function MyCount() {\n  const [state, dispatch] = useHolmesReducer("myReducer");\n  return (\n      <div className="App">\n        <h1>{state?.counter}</h1>\n        <button onClick={() => dispatch({type: "INCREMENT"})}>INCREMENT</button>\n        <button onClick={() => dispatch({type: "DECREMENT"})}>DECREMENT</button>\n      </div>\n  );\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="MyCount2.js"',title:'"MyCount2.js"'},'import "./styles.css";\nimport {useHolmesReducer} from "@devx-os/react-holmes";\n\nexport default function MyCount() {\n  const [state, dispatch] = useHolmesReducer("myReducer");\n  return (\n      <div className="App">\n        <h1>{state?.counter}</h1>\n        <button onClick={() => dispatch({type: "INCREMENT"})}>INCREMENT</button>\n        <button onClick={() => dispatch({type: "DECREMENT"})}>DECREMENT</button>\n      </div>\n  );\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="MyCountVisualizer.js"',title:'"MyCountVisualizer.js"'},'import "./styles.css";\nimport {useHolmesValue} from "@devx-os/react-holmes";\n\nexport default function MyCountVisulizer() {\n  const state = useHolmesValue("myReducer");\n  return (\n      <div className="App">\n        <h1>I can access only to count value:</h1>\n        {JSON.stringify(state, null, 2)}\n      </div>\n  );\n}\n')),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/react-holmes-reducer-ylih4u?file=/src/MyCount.js"},"Count increment/decrement")))}d.isMDXComponent=!0}}]);